name: CI/CD Pipeline

on:
  push:
    branches: [ main, feat/new-ui ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test_db
          MYSQL_DATABASE: test_expensesdb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Verify MySQL Connection
        env:
          DB_HOST: 127.0.0.1 # maybe use localhost
          DB_CONNECTION: mysql
          DB_NAME: test_expensesdb
          DB_USER: root
          DB_PASSWORD: test_db
          DB_PORT: 3306
        run: |
          mysql -h 127.0.0.1 -P 3306 -uroot -ptest_db
          mysql -h 127.0.0.1 -P 3306 -e 'CREATE DATABASE IF NOT EXISTS test_expensesdb;' -uroot -ptest_db

      - name: Initialize Database Schema
        run: |
          cd backend
          mvn spring-boot:run -Dspring-boot.run.arguments="--spring.jpa.hibernate.ddl-auto=create" -Dspring-boot.run.jvmArguments="-Dspring.config.location=classpath:/test-application.properties" &
          # Wait for application to start and initialize schema
          sleep 30
          # Kill the application
          pkill -f "spring-boot:run" || true

      - name: Insert Test Data
        run: |
          mysql -h 127.0.0.1 -P 3306 -u root -ptest_db test_expensesdb -e "
          INSERT INTO test_expensesdb.currencies (code, name, symbol) VALUES ('GTQ', 'Quetzales', 'Q');
          INSERT INTO test_expensesdb.currencies (code, name, symbol) VALUES ('USD', 'Dolares', '$');
          INSERT INTO test_expensesdb.users (id, creation_date, currency_id, email, first_name, last_name, password, profile_picture, username, role) 
          VALUES (0xF8DFFE3009ED4794ABC798A930C7B938, '2025-07-01', 1, 'coding.tamalito@gmail.com', null, null, '$2a$10$FKYfPVP3XGCZswCBCKXKTeJqn8.cYJgU2T1YgWG0Tz3Z0tKn1r.ga', 'profilePicture', 'tamalito', 0);
          "

#      - name: Run Backend Integration Tests
#        run: |
#          cd backend
#          mvn clean install -Pexecute-integration-tests -Dspring.profiles.active=test

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json

      - name: Install UI Dependencies
        run: |
          cd ui
          npm ci

      - name: Build UI
        run: |
          cd ui
          npm run build

      - name: Run UI Tests
        run: |
          cd ui
          npm test
